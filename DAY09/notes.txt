https://blog.kkdevops.com/jenkins-ci-cd-upstream-downstream-triggers-parallel-execution-shared-libraries/

UPSTREAM AND DOWNSTREAM JOBS
============================
ANTE OOKA JOB RUN INA AFTER NEXT JOB RUN AVVALI FOR EXAMPLE 1.DEV JOB SUCCESSFULL GA RUN INDI NEXT 2.STG JOB SUCCESSFULL GA RUN AND FINAL 3. UAT KUDA SUCCESSFULL GA RUN AVVALI.

1. DEV TRIGGER ITHY
===================

pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'
    }

    stages {
        stage('Git Check-out') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        stage('Maven Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('SonarQube Report') {
            steps {
                sh 'mvn clean sonar:sonar'
            }
        }

        stage('Trigger swiss-stg') {
            steps {
                script {
                    build job: 'swiss-stg', wait: false
                }
            }
        }
    }
}


2.DEV SUCCESSFULL INDI NEXT STG TRIGGER INDI
============================================

pipeline {
    agent any 
        tools {
            maven 'maven-3.9.9'
        } //tools ending
        stages {
          stage ('Git Check-out') {
              steps {
                  git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
              } //steps ending
          }  //stage ending
          stage ('sonarQube') {
              steps {
                  sh "mvn clean sonar:sonar"
              } //steps ending
          } //stage ending
          stage ('swiss-uat') {
              steps {
                  build job: 'swiss-uat', wait: false //downstream
              } //steps ending
          } //stage ending
        } // stages ending
    } //pipeline ending


3.STG SUCCESSFULL GA TRIGGER ITHY UAT TRIGGER AVTHUNDI
======================================================

pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'
    }

    stages {
        stage('Git Check-out') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        stage('Backup to Nexus') {
            steps {
                sh 'mvn clean deploy'
            }
        }
    }
}




3.PARALLEL JOBS TO REDUCE TO THE TIME MAVEN AND SONARQUBE OKKATE STAGE LO AND NEXUS AND TOMCAT VERE LO
======================================================================================================


1.PARALLEL JOBS FOR MAVEN AND SONARQUBE PIPELINE FOR JUST ADD PARELLEL FUNCTION parellel()
==========================================================================================

pipeline {
    agent any  // This means the pipeline can run on any available Jenkins agent

    tools {
        maven 'maven-3.9.9'   // Use Maven 3.9.9 tool configured in Jenkins
    }

    stages {
        // Stage 1: Checkout the code from GitHub
        stage('Checkout') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        // Stage 2: Maven Build and SonarQube Report (Run in parallel)
        stage('Maven Build and SonarQube') {
            steps {
                parallel (
                    "Maven Build": {
                        sh "mvn clean package"  // Run Maven build
                    },
                    "SonarQube Report": {
                        sh "mvn sonar:sonar"  // Run Sonar scan
                    }
                )
            }
        }
    }
}


2.PARELLEL JOBS FOR NEXUS AND TOMCAT PIPELINE FOR JUST ADD PARELLEL FUNCTION parellel()
=======================================================================================

pipeline {
    agent any  // This means the pipeline can run on any available Jenkins agent

    tools {
        maven 'maven-3.9.9'   // Use Maven 3.9.9 tool configured in Jenkins
    }

    stages {
        // Stage 1: Checkout the code from GitHub
        stage('Checkout') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        // Stage 2: Nexus and Tomcat deploy (Run in parallel)
        stage('Nexus and Tomcat') {
            steps {
                parallel (
                    "Backup for Nexus": {
                        sh "mvn clean deploy"  
                    },
                    "Deploy to Tomcat": {
                        sh """   curl -u anil:apple \
                                --upload-file /var/lib/jenkins/workspace/anil-scripted-job/target/maven-web-application.war \
                                "http://13.204.84.180:9090/manager/text/deploy?path=/maven-web-application&update=true"
                            """
                    }
                )
            }
        }
    }
}
