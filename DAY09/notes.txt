https://blog.kkdevops.com/jenkins-ci-cd-upstream-downstream-triggers-parallel-execution-shared-libraries/

UPSTREAM AND DOWNSTREAM JOBS
============================
ANTE OOKA JOB RUN INA AFTER NEXT JOB RUN AVVALI FOR EXAMPLE 1.DEV JOB SUCCESSFULL GA RUN INDI NEXT 2.STG JOB SUCCESSFULL GA RUN AND FINAL 3. UAT KUDA SUCCESSFULL GA RUN AVVALI.

1. DEV TRIGGER ITHY
===================

pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'
    }

    stages {
        stage('Git Check-out') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        stage('Maven Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('SonarQube Report') {
            steps {
                sh 'mvn clean sonar:sonar'
            }
        }

        stage('Trigger swiss-stg') {
            steps {
                script {
                    build job: 'swiss-stg', wait: false
                }
            }
        }
    }
}


2.DEV SUCCESSFULL INDI NEXT STG TRIGGER INDI
============================================

pipeline {
    agent any 
        tools {
            maven 'maven-3.9.9'
        } //tools ending
        stages {
          stage ('Git Check-out') {
              steps {
                  git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
              } //steps ending
          }  //stage ending
          stage ('sonarQube') {
              steps {
                  sh "mvn clean sonar:sonar"
              } //steps ending
          } //stage ending
          stage ('swiss-uat') {
              steps {
                  build job: 'swiss-uat', wait: false //downstream
              } //steps ending
          } //stage ending
        } // stages ending
    } //pipeline ending


3.STG SUCCESSFULL GA TRIGGER ITHY UAT TRIGGER AVTHUNDI
======================================================

pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'
    }

    stages {
        stage('Git Check-out') {
            steps {
                git branch: 'anil-free', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        stage('Backup to Nexus') {
            steps {
                sh 'mvn clean deploy'
            }
        }
    }
}




3.PARALLEL JOBS TO REDUCE TO THE TIME MAVEN AND SONARQUBE OKKATE STAGE LO AND NEXUS AND TOMCAT VERE LO
======================================================================================================

pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'
    }

    stages {

        // Stage 1: Checkout
        stage ('Checkout') {
            steps {
                echo "üì¶ Checking out code..."
                git branch: 'anil-env', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
            }
        }

        // Stage 2: Build & Sonar in parallel
        stage ('Build and Sonar in Parallel') {
            parallel {
                stage ('Maven Build & SonarQube') {
                    steps {
                        echo "‚öôÔ∏è Running Maven build..."
                        sh 'mvn clean sonar:sonar package'
                    }
                }
            }
        }

        // Stage 3: Nexus Deploy & Tomcat Deploy in parallel
        stage ('Nexus and Tomcat Deploy in Parallel') {
            parallel {
                stage ('Nexus Deploy') {
                    steps {
                        echo "üì¶ Deploying to Nexus..."
                        sh 'mvn clean deploy'
                        sh '''
                            curl -u admin:apple \
                            --upload-file /var/lib/jenkins/workspace/Anil-Pipeline-Job/target/maven-web-application.war \
                            "http://13.233.104.113:9090/manager/text/deploy?path=/maven-web-application&update=true"
                        '''
                    }
                }
            }
        }
    }
}
