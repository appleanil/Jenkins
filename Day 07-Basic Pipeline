"Groovy script" PIPELINE CONCEPT
================================
1. Basic syntax:
============
node {
    stage('stage one') {
        sh 'echo "Hello one"'
    }
    stage ('stage two'){
        sh 'echo "Hello two"'
    }
    stage ('stage three') {
        sh 'echo "Hello three"'
    }
}




2. Apply in job by PIPELINE  by Git   
===========================

node {
    stage ('Git check-out') {
        //echo "we can write anuthing to meaningful message its optional"
        goto pipeline syntax-->select snippet generator-->paste git url-->copy the URL and paste in this line
    }  //stage ending
} //for the best practices add node ending






3. Apply in job by PIPELINE  by MAVEN
====================================
node {
    // /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven-3.9.9/bin
    //before MAVEN BUILD U MUST ADD STAGE ONE IS GIT CHECK-OUT
   def mavenHome=tool name: "maven-3.9.9"
    stage ('Maven Build') {
        //echo "we can write anuthing to meaningful message its optional"
        sh "${mavenHome}/bin/mvn clean package"
    }  //stage ending
} //for the best practices add node ending




4. Apply in job by PIPELINE  by SonarQube
========================================
//before sonarqube U MUST ADD STAGE ONE IS GIT CHECK-OUT, MAVEN BUILD
node {
    stage('SonarQube Report') {
    //echo "we can write anuthing to meaningful message its optional"
    sh "${mavenHome}/bin/mvn sonar:sonar"
  }
}





5. Apply in job by PIPELINE  by TOMCAT
======================================
//before sonarqube U MUST ADD STAGE ONE IS GIT CHECK-OUT, MAVEN BUILD, SONARQUBE REPORT
node
 stage('Deploy to Tomcat')  {
//echo "we can write anuthing to meaningful message its optional"
      sh """
 curl -u admin:apple \
--upload-file /var/lib/jenkins/workspace/jio-scripted-way-PL/target/maven-web-application.war \
"http://3.109.2.100:9090/manager/text/deploy?path=/maven-web-application&update=true"
           """
    }
}





6. Apply in job by PIPELINE  by NEXUS
=====================================
//before sonarqube U MUST ADD STAGE ONE IS GIT CHECK-OUT, MAVEN BUILD, SONARQUBE REPORT, DEPLOY TO TOMCAT
node {
 stage('BACKUP TO NEXUS') {
    //echo "we can write anuthing to meaningful message its optional"
     sh "${mavenHome}/bin/mvn clean deploy"
  }
}




7. SINGLE LINE CODE MAVEN BUILD, SONARQUBE REPORT, BACKUP TO NEXUS, DEPLOY TO TOMCAT
====================================================================================

node {
    stage ('Git check-out') {
         
    git branch: 'anil-test', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'
        } //stage ending
    def mavenHome=tool name: "maven-3.9.9"
    stage ('Maven Build') {
        sh "${mavenHome}/bin/mvn clean package"
    }  //stage ending
    stage ('SonarQube Report') {
        sh "${mavenHome}/bin/mvn clean sonar:sonar"
    } //stage ending
    stage ('Backup to Nexus') {
        sh "${mavenHome}/bin/mvn clean deploy"
    } //stage ending
    stage ('Deploy to Tomcat') {
       /*sh """
        curl -u admin:apple --upload-file target/maven-web-application.war \
        'http://3.108.59.180:9090/manager/text/deploy?path=/maven-web-application&update=true'
        """*/
        
         sh """
 curl -u admin:apple \
--upload-file /var/lib/jenkins/workspace/jio-QA/target/maven-web-application.war \
"http://3.108.59.180:9090/manager/text/deploy?path=/maven-web-application&update=true"
           """

    } //stage ending
    } //node ending





git branch: 'anil-test', url: 'https://github.com/appleanil/maven-webapplication-project-kkfunda.git'  for my pratcise its dumpy



Blog url:

https://blog.kkdevops.com/jenkins-scripted-pipeline-a-complete-step-by-step-guide-for-real-ci-cd/
